name: Re Deploy Review Service

on:
  pull_request:
    types: [ synchronize ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js environment
      uses: actions/setup-node@v3.5.1
      with:
        # Set always-auth in npmrc.
        always-auth: # optional, default is false
        # Version Spec of the version to use. Examples: 12.x, 10.15.1, >=10.15.0.
        node-version: 16.18.0
        # File containing the version Spec of the version to use.  Examples: .nvmrc, .node-version, .tool-versions.
        node-version-file: # optional
        # Target architecture for Node to use. Examples: x86, x64. Will use system architecture by default.
        architecture: # optional
        # Set this option if you want the action to check for the latest available version that satisfies the version spec.
        check-latest: # optional
        # Optional registry to set up for auth. Will set the registry in a project level .npmrc and .yarnrc file, and set up auth to read in from env.NODE_AUTH_TOKEN.
        registry-url: # optional
        # Optional scope for authenticating against scoped registries. Will fall back to the repository owner when using the GitHub Packages registry (https://npm.pkg.github.com/).
        scope: # optional
        # Used to pull node distributions from node-versions.  Since there's a default, this is typically not supplied by the user.
        token: # optional, default is ${{ github.token }}
        # Used to specify a package manager for caching in the default directory. Supported values: npm, yarn, pnpm.
        cache: # optional
        # Used to specify the path to a dependency file: package-lock.json, yarn.lock, etc. Supports wildcards or a list of file names for caching multiple dependencies.
        cache-dependency-path: # optional

    - name: Make envfile
      uses: SpicyPizza/create-envfile@v1.3
      with:
        envkey_DATABASE_URL: "postgresql://prisma:prisma@localhost:5432/tests"

    - name: Test
      run: |
        npm install -g yarn
        yarn install
        yarn test

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
        - uses: actions/checkout@v3

        - name: Configure AWS Credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-region: "ap-northeast-1"
            aws-access-key-id: ${{ secrets.APPRUNNER_ACCESS_KEY_ID }} #アクセスキー
            aws-secret-access-key: ${{ secrets.APPRUNNER_ACCESS_SECRET_KEY }} #シークレットキー

        - name: Get Service Arn
          id: get-service-arn
          env:
            PR_NUMBER: ${{ github.event.number }}
          run: |
            SERVICE_ARN=`aws apprunner list-services --query "ServiceSummaryList[?ServiceName=='nestjs-startkit_$PR_NUMBER'&&Status=='RUNNING']|[0].ServiceArn"`
            echo "service-arn=$SERVICE_ARN" >> $GITHUB_OUTPUT

        - name: Update AppRunner Service
          if: startsWith(${{ steps.get-service-arn.outputs.service-arn }}, 'arn:aws:apprunner')
          run: |
            aws apprunner start-deployment --service-arn ${{ steps.get-service-arn.outputs.service-arn }}
